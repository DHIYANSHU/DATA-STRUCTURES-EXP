#include <stdio.h>
#include <stdbool.h>

#define MAX_NODES 100

int adj_matrix[MAX_NODES][MAX_NODES];
bool visited[MAX_NODES];

// Recursive DFS traversal function
void dfs(int current_node, int num_nodes) {
    printf("%d ", current_node);
    visited[current_node] = true;

    for (int i = 0; i < num_nodes; i++) {
        if (adj_matrix[current_node][i] == 1 && !visited[i]) {
            dfs(i, num_nodes);
        }
    }
}

int main() {
    int num_nodes = 6;
    int edges[][2] = {{0, 1}, {0, 2}, {1, 3}, {1, 4}, {2, 5}};

    // Initialize adjacency matrix and visited array
    for (int i = 0; i < num_nodes; i++) {
        visited[i] = false;
        for (int j = 0; j < num_nodes; j++) {
            adj_matrix[i][j] = 0;
        }
    }

    // Populate adjacency matrix
    for (int i = 0; i < sizeof(edges) / sizeof(edges[0]); i++) {
        int u = edges[i][0];
        int v = edges[i][1];
        adj_matrix[u][v] = 1;
        adj_matrix[v][u] = 1;
    }

    printf("DFS traversal starting from node 0: ");
    dfs(0, num_nodes);
    printf("\n");

    return 0;
}
