#include <stdio.h>
#include <stdbool.h>

#define V 5

void findPath(int graph[V][V], int start, int end) {
    int queue[V];
    int front = -1, rear = -1;
    int parent[V];
    bool visited[V] = {false};

    queue[++rear] = start;
    visited[start] = true;
    parent[start] = -1;

    while (front != rear) {
        int current = queue[++front];
        if (current == end) {
            break;
        }
        for (int i = 0; i < V; i++) {
            if (graph[current][i] == 1 && !visited[i]) {
                visited[i] = true;
                queue[++rear] = i;
                parent[i] = current;
            }
        }
    }

    if (visited[end]) {
        printf("Path from %d to %d: ", start, end);
        int path[V], path_index = 0;
        int current = end;
        while (current != -1) {
            path[path_index++] = current;
            current = parent[current];
        }
        for (int i = path_index - 1; i >= 0; i--) {
            printf("%d%s", path[i], (i == 0) ? "" : " -> ");
        }
        printf("\n");
    } else {
        printf("No path found from %d to %d\n", start, end);
    }
}

int main() {
    int graph[V][V] = {
        {0, 1, 0, 0, 0},
        {1, 0, 1, 0, 0},
        {0, 1, 0, 1, 1},
        {0, 0, 1, 0, 1},
        {0, 0, 1, 1, 0}
    };
    findPath(graph, 0, 4);
    return 0;
}
