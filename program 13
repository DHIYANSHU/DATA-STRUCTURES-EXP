#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

int queue[MAX_SIZE];
int front = -1, rear = -1;

// Function to check if the queue is full
int is_full() {
    return (rear == MAX_SIZE - 1);
}

// Function to check if the queue is empty
int is_empty() {
    return (front == -1 || front > rear);
}

// Function to add an element to the queue (Enqueue)
void enqueue(int item) {
    if (is_full()) {
        printf("Queue is full\n");
        return;
    }
    if (front == -1) {
        front = 0;
    }
    queue[++rear] = item;
    printf("%d enqueued to queue\n", item);
}

// Function to remove an element from the queue (Dequeue)
int dequeue() {
    if (is_empty()) {
        printf("Queue is empty\n");
        return -1;
    }
    int item = queue[front++];
    if (front > rear) {
        front = rear = -1; // Reset queue
    }
    printf("%d dequeued from queue\n", item);
    return item;
}

// Function to display the elements of the queue
void display() {
    if (is_empty()) {
        printf("Queue is empty\n");
        return;
    }
    printf("Queue elements are: ");
    for (int i = front; i <= rear; i++) {
        printf("%d ", queue[i]);
    }
    printf("\n");
}

int main() {
    enqueue(10);
    enqueue(20);
    enqueue(30);
    display();

    dequeue();
    display();

    enqueue(40);
    display();

    return 0;
}
